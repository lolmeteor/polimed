import { NextRequest, NextResponse } from 'next/server';

// –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
// –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –¥–æ–ª–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ (–ë–î)
export const contactsStore: Record<string | number, {
  telegramId: number,
  phoneNumber: string,
  firstName: string,
  lastName?: string,
  contactUserId: number,
  storedAt?: string
}> = {}

export async function GET(req: NextRequest) {
  try {
    // –ü–æ–ª—É—á–∞–µ–º Telegram ID –∏–∑ –∑–∞–ø—Ä–æ—Å–∞
    const { searchParams } = new URL(req.url);
    const telegramId = searchParams.get('telegramId');
    
    console.log(`üîµ Contact API: –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –∫–æ–Ω—Ç–∞–∫—Ç–∞ –¥–ª—è telegramId: ${telegramId}`);
    
    if (!telegramId) {
      console.log('üî¥ Contact API: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç telegramId –≤ –∑–∞–ø—Ä–æ—Å–µ');
      return NextResponse.json({ error: 'telegramId is required' }, { status: 400 });
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ—Ö—Ä–∞–Ω–µ–Ω –ª–∏ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const contact = contactsStore[telegramId];
    
    if (contact) {
      console.log(`üü¢ Contact API: –ù–∞–π–¥–µ–Ω –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è telegramId ${telegramId}:`, contact);
      return NextResponse.json({
        found: true,
        ...contact
      });
    } else {
      console.log(`üü° Contact API: –ö–æ–Ω—Ç–∞–∫—Ç –¥–ª—è telegramId ${telegramId} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
      return NextResponse.json({ found: false });
    }
    
  } catch (error) {
    console.error('üî¥ Contact API: –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞:', error);
    return NextResponse.json(
      { error: 'Internal server error' },
      { status: 500 }
    );
  }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
export async function DELETE(req: NextRequest) {
  try {
    const { searchParams } = new URL(req.url);
    const telegramId = searchParams.get('telegramId');
    
    if (telegramId) {
      console.log(`üîµ Contact API: –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞ –¥–ª—è telegramId: ${telegramId}`);
      delete contactsStore[telegramId];
      return NextResponse.json({ success: true, message: `Contact for telegramId ${telegramId} deleted` });
    } else {
      // –ï—Å–ª–∏ telegramId –Ω–µ —É–∫–∞–∑–∞–Ω, –æ—á–∏—â–∞–µ–º –≤—Å–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
      console.log('üîµ Contact API: –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤');
      for (const key in contactsStore) {
        delete contactsStore[key];
      }
      return NextResponse.json({ success: true, message: 'All contacts deleted' });
    }
  } catch (error) {
    console.error('üî¥ Contact API: –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤:', error);
    return NextResponse.json(
      { error: 'Internal server error' },
      { status: 500 }
    );
  }
}

