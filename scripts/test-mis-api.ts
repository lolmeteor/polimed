import { MisApiService } from '../services/mis-api-service';
import { MisDistrict, MisLPU, MisSpeciality } from '../types/mis-api';

async function testMisConnection() {
  console.log('–ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å API –ú–ò–°...');
  
  try {
    // –®–∞–≥ 1: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ä–∞–π–æ–Ω–æ–≤
    console.log('–ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ä–∞–π–æ–Ω–æ–≤...');
    const districts = await MisApiService.getDistrictList();
    console.log('‚úÖ –°–ø–∏—Å–æ–∫ —Ä–∞–π–æ–Ω–æ–≤ –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ');
    
    if (districts.Districts?.District) {
      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ –º–∞—Å—Å–∏–≤, —Ç–∞–∫ –∫–∞–∫ API –º–æ–∂–µ—Ç –≤–µ—Ä–Ω—É—Ç—å –∫–∞–∫ –º–∞—Å—Å–∏–≤, —Ç–∞–∫ –∏ –µ–¥–∏–Ω–∏—á–Ω—ã–π –æ–±—ä–µ–∫—Ç
      const districtArray = Array.isArray(districts.Districts.District) 
        ? districts.Districts.District 
        : [districts.Districts.District];
      
      console.log(`–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–π–æ–Ω–æ–≤: ${districtArray.length}`);
      
      if (districtArray.length > 0) {
        const firstDistrict = districtArray[0] as MisDistrict;
        console.log(`–ü–µ—Ä–≤—ã–π —Ä–∞–π–æ–Ω: ID=${firstDistrict.IdDistrict}, –ù–∞–∑–≤–∞–Ω–∏–µ=${firstDistrict.DistrictName}`);
        
        // –®–∞–≥ 2: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –õ–ü–£ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ —Ä–∞–π–æ–Ω–∞
        console.log(`\n–ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –õ–ü–£ –¥–ª—è —Ä–∞–π–æ–Ω–∞ ID=${firstDistrict.IdDistrict}...`);
        const lpuList = await MisApiService.getLPUList(firstDistrict.IdDistrict.toString());
        console.log('‚úÖ –°–ø–∏—Å–æ–∫ –õ–ü–£ –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ');
        
        if (lpuList.LPUs?.LPU) {
          // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ –º–∞—Å—Å–∏–≤, —Ç–∞–∫ –∫–∞–∫ API –º–æ–∂–µ—Ç –≤–µ—Ä–Ω—É—Ç—å –∫–∞–∫ –º–∞—Å—Å–∏–≤, —Ç–∞–∫ –∏ –µ–¥–∏–Ω–∏—á–Ω—ã–π –æ–±—ä–µ–∫—Ç
          const lpuArray = Array.isArray(lpuList.LPUs.LPU) 
            ? lpuList.LPUs.LPU 
            : [lpuList.LPUs.LPU];
          
          console.log(`–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –õ–ü–£: ${lpuArray.length}`);
          
          if (lpuArray.length > 0) {
            const firstLpu = lpuArray[0] as MisLPU;
            console.log(`–ü–µ—Ä–≤–æ–µ –õ–ü–£: ID=${firstLpu.IdLPU}, –ù–∞–∑–≤–∞–Ω–∏–µ=${firstLpu.LPUName}`);
            
            // –®–∞–≥ 3: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–µ–π –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –õ–ü–£
            console.log(`\n–ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–µ–π –¥–ª—è –õ–ü–£ ID=${firstLpu.IdLPU}...`);
            const specialities = await MisApiService.getSpecialityList(firstLpu.IdLPU.toString());
            console.log('‚úÖ –°–ø–∏—Å–æ–∫ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–µ–π –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ');
            
            if (specialities.Specialities?.Speciality) {
              // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ –º–∞—Å—Å–∏–≤, —Ç–∞–∫ –∫–∞–∫ API –º–æ–∂–µ—Ç –≤–µ—Ä–Ω—É—Ç—å –∫–∞–∫ –º–∞—Å—Å–∏–≤, —Ç–∞–∫ –∏ –µ–¥–∏–Ω–∏—á–Ω—ã–π –æ–±—ä–µ–∫—Ç
              const specialityArray = Array.isArray(specialities.Specialities.Speciality) 
                ? specialities.Specialities.Speciality 
                : [specialities.Specialities.Speciality];
                
              console.log(`–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–µ–π: ${specialityArray.length}`);
            } else {
              console.log('–°–ø–∏—Å–æ–∫ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–µ–π –ø—É—Å—Ç');
            }
          }
        } else {
          console.log('–°–ø–∏—Å–æ–∫ –õ–ü–£ –ø—É—Å—Ç');
        }
      }
    } else {
      console.log('–°–ø–∏—Å–æ–∫ —Ä–∞–π–æ–Ω–æ–≤ –ø—É—Å—Ç');
    }
    
    console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –ú–ò–° –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
    return true;
  } catch (error) {
    console.error('\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ API –ú–ò–°:');
    console.error(error);
    return false;
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
testMisConnection().then(success => {
  if (!success) {
    console.log('\n–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—é –ø—Ä–æ–±–ª–µ–º:');
    console.log('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å URL —Å–µ—Ä–≤–∏—Å–æ–≤ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
    console.log('2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ GUID –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∏ –∞–∫—Ç–∏–≤–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ –ú–ò–°');
    console.log('3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –¥–æ—Å—Ç—É–ø–Ω—ã –ª–∏ —Å–µ—Ä–≤–µ—Ä–∞ –ú–ò–° –∏–∑ –≤–∞—à–µ–π —Å–µ—Ç–∏');
    console.log('4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞ –ú–ò–° –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏');
  }
  
  process.exit(success ? 0 : 1);
}); 